// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configFetcher.proto

package configfetcherpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Probe struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProbeID              int32    `protobuf:"varint,2,opt,name=probeID,proto3" json:"probeID,omitempty"`
	IpVer                int32    `protobuf:"varint,3,opt,name=ipVer,proto3" json:"ipVer,omitempty"`
	ProbeType            string   `protobuf:"bytes,4,opt,name=probeType,proto3" json:"probeType,omitempty"`
	TargetAddress        string   `protobuf:"bytes,5,opt,name=targetAddress,proto3" json:"targetAddress,omitempty"`
	NumPackets           int32    `protobuf:"varint,6,opt,name=numPackets,proto3" json:"numPackets,omitempty"`
	Interval             int32    `protobuf:"varint,7,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Probe) Reset()         { *m = Probe{} }
func (m *Probe) String() string { return proto.CompactTextString(m) }
func (*Probe) ProtoMessage()    {}
func (*Probe) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{0}
}

func (m *Probe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Probe.Unmarshal(m, b)
}
func (m *Probe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Probe.Marshal(b, m, deterministic)
}
func (m *Probe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Probe.Merge(m, src)
}
func (m *Probe) XXX_Size() int {
	return xxx_messageInfo_Probe.Size(m)
}
func (m *Probe) XXX_DiscardUnknown() {
	xxx_messageInfo_Probe.DiscardUnknown(m)
}

var xxx_messageInfo_Probe proto.InternalMessageInfo

func (m *Probe) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Probe) GetProbeID() int32 {
	if m != nil {
		return m.ProbeID
	}
	return 0
}

func (m *Probe) GetIpVer() int32 {
	if m != nil {
		return m.IpVer
	}
	return 0
}

func (m *Probe) GetProbeType() string {
	if m != nil {
		return m.ProbeType
	}
	return ""
}

func (m *Probe) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

func (m *Probe) GetNumPackets() int32 {
	if m != nil {
		return m.NumPackets
	}
	return 0
}

func (m *Probe) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

// Config Requests and Replies
type ConfigRequest struct {
	DeviceName           string   `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{1}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

type ConfigResponse struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Probes               []*Probe `protobuf:"bytes,2,rep,name=probes,proto3" json:"probes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{2}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ConfigResponse) GetProbes() []*Probe {
	if m != nil {
		return m.Probes
	}
	return nil
}

type ConfigVersionResponse struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigVersionResponse) Reset()         { *m = ConfigVersionResponse{} }
func (m *ConfigVersionResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigVersionResponse) ProtoMessage()    {}
func (*ConfigVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{3}
}

func (m *ConfigVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigVersionResponse.Unmarshal(m, b)
}
func (m *ConfigVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigVersionResponse.Marshal(b, m, deterministic)
}
func (m *ConfigVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigVersionResponse.Merge(m, src)
}
func (m *ConfigVersionResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigVersionResponse.Size(m)
}
func (m *ConfigVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigVersionResponse proto.InternalMessageInfo

func (m *ConfigVersionResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Results from Host
type PingResponse struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Port                 int64    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Rtt                  int64    `protobuf:"varint,4,opt,name=Rtt,proto3" json:"Rtt,omitempty"`
	Err                  string   `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{4}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PingResponse) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *PingResponse) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PingResponse) GetRtt() int64 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

func (m *PingResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type UdpResponse struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	PktsSent             int64    `protobuf:"varint,3,opt,name=pktsSent,proto3" json:"pktsSent,omitempty"`
	PktsReceived         int64    `protobuf:"varint,4,opt,name=pktsReceived,proto3" json:"pktsReceived,omitempty"`
	Err                  string   `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpResponse) Reset()         { *m = UdpResponse{} }
func (m *UdpResponse) String() string { return proto.CompactTextString(m) }
func (*UdpResponse) ProtoMessage()    {}
func (*UdpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{5}
}

func (m *UdpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpResponse.Unmarshal(m, b)
}
func (m *UdpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpResponse.Marshal(b, m, deterministic)
}
func (m *UdpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpResponse.Merge(m, src)
}
func (m *UdpResponse) XXX_Size() int {
	return xxx_messageInfo_UdpResponse.Size(m)
}
func (m *UdpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UdpResponse proto.InternalMessageInfo

func (m *UdpResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *UdpResponse) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *UdpResponse) GetPktsSent() int64 {
	if m != nil {
		return m.PktsSent
	}
	return 0
}

func (m *UdpResponse) GetPktsReceived() int64 {
	if m != nil {
		return m.PktsReceived
	}
	return 0
}

func (m *UdpResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ReceivedAck struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceivedAck) Reset()         { *m = ReceivedAck{} }
func (m *ReceivedAck) String() string { return proto.CompactTextString(m) }
func (*ReceivedAck) ProtoMessage()    {}
func (*ReceivedAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_401a461fcce453dc, []int{6}
}

func (m *ReceivedAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivedAck.Unmarshal(m, b)
}
func (m *ReceivedAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivedAck.Marshal(b, m, deterministic)
}
func (m *ReceivedAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedAck.Merge(m, src)
}
func (m *ReceivedAck) XXX_Size() int {
	return xxx_messageInfo_ReceivedAck.Size(m)
}
func (m *ReceivedAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedAck.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedAck proto.InternalMessageInfo

func (m *ReceivedAck) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

func init() {
	proto.RegisterType((*Probe)(nil), "configfetcher.Probe")
	proto.RegisterType((*ConfigRequest)(nil), "configfetcher.ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "configfetcher.ConfigResponse")
	proto.RegisterType((*ConfigVersionResponse)(nil), "configfetcher.ConfigVersionResponse")
	proto.RegisterType((*PingResponse)(nil), "configfetcher.PingResponse")
	proto.RegisterType((*UdpResponse)(nil), "configfetcher.UdpResponse")
	proto.RegisterType((*ReceivedAck)(nil), "configfetcher.ReceivedAck")
}

func init() { proto.RegisterFile("configFetcher.proto", fileDescriptor_401a461fcce453dc) }

var fileDescriptor_401a461fcce453dc = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x9b, 0x38, 0x6d, 0x26, 0x0d, 0x2d, 0x4b, 0x41, 0x96, 0x29, 0x28, 0x5a, 0xf5, 0x21,
	0x48, 0x28, 0x88, 0x70, 0x82, 0x42, 0xa1, 0x02, 0x21, 0x64, 0x6d, 0x68, 0x55, 0xf1, 0xe6, 0xd8,
	0xd3, 0xc4, 0x0a, 0x5d, 0x9b, 0xdd, 0x6d, 0x04, 0x27, 0xe0, 0x38, 0x3c, 0x71, 0x0a, 0x2e, 0x85,
	0x76, 0x6c, 0x27, 0xb6, 0x55, 0xc8, 0xdb, 0x37, 0xdf, 0x37, 0x3b, 0x7f, 0x9f, 0x65, 0x78, 0x10,
	0xa5, 0xf2, 0x3a, 0x99, 0xbf, 0x43, 0x13, 0x2d, 0x50, 0x8d, 0x33, 0x95, 0x9a, 0x94, 0x0d, 0x72,
	0xf2, 0x3a, 0x27, 0xf9, 0x1f, 0x07, 0xdc, 0x40, 0xa5, 0x33, 0x64, 0x0c, 0x3a, 0x32, 0xbc, 0x41,
	0xcf, 0x19, 0x3a, 0xa3, 0x9e, 0x20, 0xcc, 0x3c, 0xd8, 0xcd, 0xac, 0xf8, 0xfe, 0xcc, 0xdb, 0x19,
	0x3a, 0x23, 0x57, 0x94, 0x21, 0x3b, 0x02, 0x37, 0xc9, 0x2e, 0x51, 0x79, 0x6d, 0xe2, 0xf3, 0x80,
	0x1d, 0x43, 0x8f, 0x12, 0x3e, 0xff, 0xc8, 0xd0, 0xeb, 0x50, 0xa1, 0x0d, 0xc1, 0x4e, 0x60, 0x60,
	0x42, 0x35, 0x47, 0x73, 0x1a, 0xc7, 0x0a, 0xb5, 0xf6, 0x5c, 0xca, 0xa8, 0x93, 0xec, 0x29, 0x80,
	0xbc, 0xbd, 0x09, 0xc2, 0x68, 0x89, 0x46, 0x7b, 0x5d, 0x2a, 0x5f, 0x61, 0x98, 0x0f, 0x7b, 0x89,
	0x34, 0xa8, 0x56, 0xe1, 0x57, 0x6f, 0x97, 0xd4, 0x75, 0xcc, 0x5f, 0xc0, 0xe0, 0x0d, 0xad, 0x27,
	0xf0, 0xdb, 0x2d, 0x6a, 0x63, 0x8b, 0xc5, 0xb8, 0x4a, 0x22, 0xfc, 0xb4, 0x59, 0xad, 0xc2, 0xf0,
	0x2b, 0xb8, 0x57, 0x3e, 0xd0, 0x59, 0x2a, 0x35, 0xad, 0xbc, 0x42, 0xa5, 0x93, 0x54, 0x52, 0xba,
	0x2b, 0xca, 0x90, 0x3d, 0x87, 0x2e, 0xed, 0xa2, 0xbd, 0x9d, 0x61, 0x7b, 0xd4, 0x9f, 0x1c, 0x8d,
	0x6b, 0xa7, 0x1c, 0xd3, 0x19, 0x45, 0x91, 0xc3, 0x5f, 0xc2, 0xc3, 0xbc, 0xf2, 0x65, 0xfe, 0x7c,
	0x7b, 0x03, 0x2e, 0x61, 0x3f, 0x48, 0xe4, 0x66, 0x14, 0x06, 0x9d, 0x45, 0xaa, 0x4d, 0xe9, 0x88,
	0xc5, 0x96, 0xb3, 0x87, 0x22, 0x3b, 0x7a, 0x82, 0xb0, 0xe5, 0x82, 0x54, 0x19, 0xb2, 0xa2, 0x2d,
	0x08, 0xb3, 0x43, 0x68, 0x0b, 0x63, 0xc8, 0x83, 0xb6, 0xb0, 0xd0, 0x32, 0xa8, 0x54, 0x71, 0x73,
	0x0b, 0xf9, 0x4f, 0x07, 0xfa, 0x17, 0x71, 0xb6, 0xad, 0x5f, 0x58, 0xe9, 0x67, 0xb1, 0x75, 0x20,
	0x5b, 0x1a, 0x3d, 0x45, 0x59, 0xf6, 0x5c, 0xc7, 0x8c, 0xc3, 0xbe, 0xc5, 0x02, 0x23, 0x4c, 0x56,
	0x18, 0x17, 0x03, 0xd4, 0xb8, 0x3b, 0x26, 0x79, 0x06, 0xfd, 0x52, 0x3d, 0x8d, 0x96, 0xb6, 0x81,
	0x2a, 0x0b, 0xd8, 0x61, 0xf6, 0xc4, 0x3a, 0x9e, 0xfc, 0x76, 0x4a, 0x8f, 0xa7, 0xa8, 0xac, 0x8f,
	0xec, 0x03, 0xf4, 0xce, 0xd1, 0xe4, 0x1c, 0x3b, 0x6e, 0x98, 0x52, 0xfb, 0x1c, 0xfc, 0x27, 0xff,
	0x50, 0xf3, 0x03, 0xf0, 0x16, 0xbb, 0x82, 0xc3, 0x75, 0xad, 0xc2, 0xb8, 0x2d, 0x25, 0x4f, 0xee,
	0x54, 0x1b, 0xa6, 0xf3, 0xd6, 0xe4, 0x97, 0x03, 0x7d, 0xeb, 0x6e, 0x39, 0xf5, 0x47, 0x38, 0x38,
	0x47, 0x53, 0xf3, 0xfb, 0x71, 0xf3, 0x83, 0xaa, 0x88, 0xbe, 0xdf, 0x10, 0x2b, 0xf7, 0xe2, 0x2d,
	0x26, 0xe0, 0xd1, 0xdb, 0xef, 0xd1, 0x22, 0x94, 0x73, 0xbc, 0x38, 0x0b, 0xa6, 0x28, 0xe3, 0x42,
	0x67, 0xcd, 0x77, 0x15, 0xc3, 0xfd, 0xff, 0x68, 0xbc, 0xf5, 0xfa, 0xfe, 0x97, 0x83, 0x9a, 0x9c,
	0xcd, 0x66, 0x5d, 0xfa, 0x87, 0xbc, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x61, 0xe6, 0xb2,
	0x5a, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
	GetConfigVersion(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigVersionResponse, error)
}

type configServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigServiceClient(cc *grpc.ClientConn) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/configfetcher.ConfigService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetConfigVersion(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigVersionResponse, error) {
	out := new(ConfigVersionResponse)
	err := c.cc.Invoke(ctx, "/configfetcher.ConfigService/GetConfigVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	GetConfig(context.Context, *ConfigRequest) (*ConfigResponse, error)
	GetConfigVersion(context.Context, *ConfigRequest) (*ConfigVersionResponse, error)
}

// UnimplementedConfigServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServiceServer struct {
}

func (*UnimplementedConfigServiceServer) GetConfig(ctx context.Context, req *ConfigRequest) (*ConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedConfigServiceServer) GetConfigVersion(ctx context.Context, req *ConfigRequest) (*ConfigVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigVersion not implemented")
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configfetcher.ConfigService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetConfigVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfigVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configfetcher.ConfigService/GetConfigVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfigVersion(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configfetcher.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _ConfigService_GetConfig_Handler,
		},
		{
			MethodName: "GetConfigVersion",
			Handler:    _ConfigService_GetConfigVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configFetcher.proto",
}

// PingServiceClient is the client API for PingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingServiceClient interface {
	GetPingResponse(ctx context.Context, in *PingResponse, opts ...grpc.CallOption) (*ReceivedAck, error)
	ExchangeUDPSendReceive(ctx context.Context, in *UdpResponse, opts ...grpc.CallOption) (*UdpResponse, error)
}

type pingServiceClient struct {
	cc *grpc.ClientConn
}

func NewPingServiceClient(cc *grpc.ClientConn) PingServiceClient {
	return &pingServiceClient{cc}
}

func (c *pingServiceClient) GetPingResponse(ctx context.Context, in *PingResponse, opts ...grpc.CallOption) (*ReceivedAck, error) {
	out := new(ReceivedAck)
	err := c.cc.Invoke(ctx, "/configfetcher.PingService/GetPingResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingServiceClient) ExchangeUDPSendReceive(ctx context.Context, in *UdpResponse, opts ...grpc.CallOption) (*UdpResponse, error) {
	out := new(UdpResponse)
	err := c.cc.Invoke(ctx, "/configfetcher.PingService/ExchangeUDPSendReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServiceServer is the server API for PingService service.
type PingServiceServer interface {
	GetPingResponse(context.Context, *PingResponse) (*ReceivedAck, error)
	ExchangeUDPSendReceive(context.Context, *UdpResponse) (*UdpResponse, error)
}

// UnimplementedPingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPingServiceServer struct {
}

func (*UnimplementedPingServiceServer) GetPingResponse(ctx context.Context, req *PingResponse) (*ReceivedAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPingResponse not implemented")
}
func (*UnimplementedPingServiceServer) ExchangeUDPSendReceive(ctx context.Context, req *UdpResponse) (*UdpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeUDPSendReceive not implemented")
}

func RegisterPingServiceServer(s *grpc.Server, srv PingServiceServer) {
	s.RegisterService(&_PingService_serviceDesc, srv)
}

func _PingService_GetPingResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServiceServer).GetPingResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configfetcher.PingService/GetPingResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServiceServer).GetPingResponse(ctx, req.(*PingResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _PingService_ExchangeUDPSendReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UdpResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServiceServer).ExchangeUDPSendReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configfetcher.PingService/ExchangeUDPSendReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServiceServer).ExchangeUDPSendReceive(ctx, req.(*UdpResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _PingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configfetcher.PingService",
	HandlerType: (*PingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPingResponse",
			Handler:    _PingService_GetPingResponse_Handler,
		},
		{
			MethodName: "ExchangeUDPSendReceive",
			Handler:    _PingService_ExchangeUDPSendReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configFetcher.proto",
}
