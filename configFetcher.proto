syntax = "proto3";

package configfetcher;
option go_package="configfetcherpb";

// Probe Configs
message Version {
  int32 version = 1;
}

message Probes {
  int32 version = 1;
  repeated Probe probes =2;
}

message Probe {
  string name = 1;
  int32 probeID = 2;
  int32 ipVer = 3;
  string probeType = 4;
  string targetAddress = 5;
  int32 numPackets = 6;
  int32 interval = 7;
}

// Config Requests and Replies
message ConfigRequest {
  string deviceName = 1;
}

message ConfigResponse {
  Probes probes = 1;
}

// Results from Host
message PingResponse {
  string host = 1;
	string Addr = 2;
	int64 Port = 3;
	int64 Rtt = 4;
	string err  = 5;
}

message ReceivedAck {
  bool received = 1;
}

service ConfigService{
  rpc GetConfig(ConfigRequest) returns (ConfigResponse) {};
  rpc GetPingResponse(PingResponse) returns (ReceivedAck) {};
}
